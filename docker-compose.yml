version: "3"

services:
  moynihan:
    container_name: "moynihan"
    image: moynihan/moynihan.io:latest
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.moynihan.rule: "Host(`moynihan.io`) || Host(`www.moynihan.io`)"
      traefik.http.routers.moynihan.entrypoints: "web"
      traefik.http.services.moynihan-service.loadbalancer.server.port: "80"
      traefik.http.routers.moynihan.service: "moynihan-service"
      treafik.http.middlewares.moynihan-redirect.redirectregex.regex: "^(https?://)www.(.*)$$"
      traefik.http.middlewares.moynihan-redirect.redirectregex.replacement: "$${1}$${2}"
      traefik.http.routers.moynihan.middlewares: "moynihan-redirect"
      traefik.docker.network: "traefik"

  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.rule: "Host(`portainer.moynihan.io`)"
      traefik.http.routers.portainer.entrypoints: "web"
      traefik.http.services.portainer-service.loadbalancer.server.port: "9000"
      traefik.http.routers.portainer.service: "portainer-service"

      traefik.http.routers.portainer-socket.rule: "Host(`portainer-socket.moynihan.io`)"
      traefik.http.routers.portainer-socket.entrypoints: "web"
      traefik.http.services.portainer-socket-service.loadbalancer.server.port: "8000"
      traefik.http.routers.portainer-socket.service: "portainer-socket-service"

      traefik.docker.network: "traefik"

  stonks:
    container_name: stonks
    image: moynihan/stonks.icu
    environment:
      - GEOLICENSE=${GEOLICENSE}
      - PORT=1818
    restart: always
    ports:
      - 1818:1818
    labels:
      traefik.enable: "true"
      traefik.http.routers.stonks.rule: "Host(`stonks.icu`)"
      traefik.http.routers.stonks.entrypoints: "web"
      traefik.http.services.stonks-service.loadbalancer.server.port: "1818"
      traefik.http.routers.stonks.service: "stonks-service"
      traefik.docker.network: "traefik"


  traefik:
    container_name: traefik
    image: traefik:v2.3
    command: --api.insecure=true --providers.docker --entryPoints.web.address=:80
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./shadow:/shadow:ro
      - ./traefik:/traefik
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: "Host(`traefik-netsoc.moynihan.io`)"
      traefik.http.routers.traefik.entrypoints: "web"
      traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
      traefik.http.routers.traefik.service: "traefik-service"
      traefik.docker.network: "traefik"
      traefik.http.middlewares.traefik-auth.basicauth.usersfile: "/shadow"
      traefik.http.routers.traefik.middlewares: "traefik-auth@docker"
      # global redirect to https
      traefik.http.routers.http-catchall.rule: "hostregexp(`{host:.+}`)"
      traefik.http.routers.http-catchall.entrypoints: "web"
      traefik.http.routers.http-catchall.middlewares: "redirect-to-https"

      # middleware redirect
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"

volumes:
  portainer_data:
